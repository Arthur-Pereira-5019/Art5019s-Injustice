{
  "_fv": 66,
  "_type": "procedure",
  "definition": {
    "procedurexml": "<xml xmlns=\"https://developers.google.com/blockly/xml\"><block type=\"event_trigger\" deletable=\"false\" x=\"40\" y=\"40\"><field name=\"trigger\">no_ext_trigger</field><next><block type=\"controls_if\"><value name=\"IF0\"><block type=\"logic_binary_ops\"><field name=\"OP\">AND</field><value name=\"A\"><block type=\"math_binary_ops\"><field name=\"OP\">GT</field><value name=\"A\"><block type=\"math_number\"><field name=\"NUM\">150</field></block></value><value name=\"B\"><block type=\"entity_health\"><value name=\"entity\"><block type=\"entity_from_deps\"></block></value></block></value></block></value><value name=\"B\"><block type=\"logic_binary_ops\"><field name=\"OP\">EQ</field><value name=\"A\"><block type=\"entity_data_logic_get\"><field name=\"customEntity\">CUSTOM:KryptoTheSuperdog</field><field name=\"accessor\">hascollar</field><value name=\"entity\"><block type=\"entity_from_deps\"></block></value></block></value><value name=\"B\"><block type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></block></value></block></value></block></value><statement name=\"DO0\"><block type=\"entity_data_logic_set\"><field name=\"customEntity\">CUSTOM:KryptoTheSuperdog</field><field name=\"accessor\">hascollar</field><value name=\"entity\"><block type=\"entity_from_deps\"></block></value><value name=\"value\"><block type=\"logic_boolean\"><field name=\"BOOL\">FALSE</field></block></value><next><block type=\"java_code\"><field name=\"CODE\">if (entity instanceof NeutralMob _entity) {&amp;#10;    _entity.forgetCurrentTargetAndRefreshUniversalAnger();&amp;#10;    _entity.stopBeingAngry();&amp;#10;    _entity.setLastHurtByMob(null);&amp;#10;    _entity.setLastHurtByPlayer(null);&amp;#10;    _entity.setTarget(null);&amp;#10;    _entity.setPersistentAngerTarget(null);&amp;#10;}</field><next><block type=\"java_code\"><field name=\"CODE\">if (entity instanceof LivingEntity _entity) { &amp;#10;_entity.getBrain().eraseMemory(MemoryModuleType.ANGRY_AT);&amp;#10;_entity.getBrain().eraseMemory(MemoryModuleType.ATTACK_TARGET);&amp;#10;_entity.getBrain().eraseMemory(MemoryModuleType.NEAREST_VISIBLE_ATTACKABLE_PLAYER);&amp;#10;}</field><next><block type=\"java_code\"><field name=\"CODE\">if (entity instanceof Mob _entity) { &amp;#10;_entity.targetSelector.getAvailableGoals().removeIf(goal -&gt;&amp;#10;        goal.getGoal() instanceof NearestAttackableTargetGoal ||&amp;#10;        goal.getGoal() instanceof HurtByTargetGoal&amp;#10;    );&amp;#10;}</field><next><block type=\"wait\"><value name=\"ticks\"><block type=\"math_number\"><field name=\"NUM\">5</field></block></value><statement name=\"do\"><block type=\"java_code\"><field name=\"CODE\">if (entity instanceof PathfinderMob _entity) { &amp;#10;_entity.targetSelector.addGoal(3, new HurtByTargetGoal(_entity));&amp;#10;}</field></block></statement><next><block type=\"entity_set_health\"><value name=\"entity\"><block type=\"entity_from_deps\"></block></value><value name=\"health\"><block type=\"entity_health_max\"><value name=\"entity\"><block type=\"entity_from_deps\"></block></value></block></value><next><block type=\"entity_maketamed\"><value name=\"entity\"><block type=\"entity_from_deps\"></block></value><value name=\"sourceentity\"><block type=\"source_entity_from_deps\"></block></value><next><block type=\"entity_set_health\"><value name=\"entity\"><block type=\"entity_from_deps\"></block></value><value name=\"health\"><block type=\"entity_health_max\"><value name=\"entity\"><block type=\"entity_from_deps\"></block></value></block></value><next><block type=\"spawn_gem\"><field name=\"despawn\">TRUE</field><value name=\"block\"><block type=\"mcitem_all\"><field name=\"value\">CUSTOM:RedKryptonite</field></block></value><value name=\"x\"><block type=\"coord_x\"></block></value><value name=\"y\"><block type=\"coord_y\"></block></value><value name=\"z\"><block type=\"coord_z\"></block></value><value name=\"pickUpDelay\"><block type=\"math_number\"><field name=\"NUM\">10</field></block></value><next><block type=\"play_sound\"><field name=\"sound\">entity.item.break</field><field name=\"soundcategory\">neutral</field><value name=\"x\"><block type=\"coord_x\"></block></value><value name=\"y\"><block type=\"coord_y\"></block></value><value name=\"z\"><block type=\"coord_z\"></block></value><value name=\"level\"><block type=\"math_number\"><field name=\"NUM\">1</field></block></value><value name=\"pitch\"><block type=\"math_number\"><field name=\"NUM\">1</field></block></value><next><block type=\"spawn_particle_multi\"><field name=\"particle\">HEART</field><value name=\"count\"><block type=\"math_number\"><field name=\"NUM\">20</field></block></value><value name=\"x\"><block type=\"coord_x\"></block></value><value name=\"y\"><block type=\"coord_y\"></block></value><value name=\"z\"><block type=\"coord_z\"></block></value><value name=\"dx\"><block type=\"math_number\"><field name=\"NUM\">1</field></block></value><value name=\"dy\"><block type=\"math_number\"><field name=\"NUM\">1</field></block></value><value name=\"dz\"><block type=\"math_number\"><field name=\"NUM\">1</field></block></value><value name=\"speed\"><block type=\"math_number\"><field name=\"NUM\">1</field></block></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block></next></block></xml>"
  }
}